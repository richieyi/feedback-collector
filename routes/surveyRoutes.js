const mongoose = require('mongoose');
const requireLogin = require('../middlewares/requireLogin');
const requireCredits = require('../middlewares/requireCredits');
const Mailer = require('../services/Mailer');
const surveyTemplate = require('../services/emailTemplates/surveyTemplate');

// Sidestep issue with running potential tests
const Survey = mongoose.model('surveys');

module.exports = app => {
	app.get('/api/surveys/thanks', (req, res) => {
		res.send('Thanks for answering!');
	});

	// Verify that user is logged in & verify that they have enough credits
	app.post('/api/surveys', requireLogin, requireCredits, async (req, res) => {
		// Pull properties from req.body
		const { title, subject, body, recipients } = req.body;

		// Create a new Survey
		const survey = Survey({
			title,
			subject,
			body,
			recipients: recipients.split(',').map(email => ({
				email: email.trim()
			})),
			// ID generated by Mongoose
			_user: req.user.id,
			dateSent: Date.now()
		});

		// Send email via Mailer
		const mailer = new Mailer(survey, surveyTemplate(survey));
		try {
			await mailer.send();
			await survey.save();

			// Dock user a credit after sending survey
			req.user.credits -= 1;
			const user = await req.user.save();

			// Send user to allow authReducer to update header
			res.send(user);
		} catch (err) {
			// 422 === Unprocessable Entity
			res.status(422).send(err);
		}
	});
};
